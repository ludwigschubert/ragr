<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RKDynamicObjectMapping.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RKDynamicObjectMapping</TokenIdentifier>
			<Abstract type="html">Defines a dynamic object mapping that determines the appropriate concrete
object mapping to apply at mapping time. This allows you to map very similar payloads
differently depending on the type of data contained therein.</Abstract>
			<DeclaredIn>RKDynamicObjectMapping.h</DeclaredIn>
			
			<NodeRef refid="10"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKDynamicObjectMapping/setDelegate:</TokenIdentifier>
			<Abstract type="html">A delegate to call back to determine the appropriate concrete object mapping
to apply to the mappable data.</Abstract>
			<DeclaredIn>RKDynamicObjectMapping.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/intf/RKDynamicObjectMappingDelegate</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, assign) id&lt;RKDynamicObjectMappingDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKDynamicObjectMapping/delegate</TokenIdentifier>
			<Abstract type="html">A delegate to call back to determine the appropriate concrete object mapping
to apply to the mappable data.</Abstract>
			<DeclaredIn>RKDynamicObjectMapping.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/intf/RKDynamicObjectMappingDelegate</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, assign) id&lt;RKDynamicObjectMappingDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKDynamicObjectMapping/setObjectMappingForDataBlock:</TokenIdentifier>
			<Abstract type="html">A block to invoke to determine the appropriate concrete object mapping
to apply to the mappable data.</Abstract>
			<DeclaredIn>RKDynamicObjectMapping.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) RKDynamicObjectMappingDelegateBlock objectMappingForDataBlock</Declaration>
			
			
			<Anchor>//api/name/objectMappingForDataBlock</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKDynamicObjectMapping/objectMappingForDataBlock</TokenIdentifier>
			<Abstract type="html">A block to invoke to determine the appropriate concrete object mapping
to apply to the mappable data.</Abstract>
			<DeclaredIn>RKDynamicObjectMapping.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) RKDynamicObjectMappingDelegateBlock objectMappingForDataBlock</Declaration>
			
			
			<Anchor>//api/name/objectMappingForDataBlock</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RKDynamicObjectMapping/dynamicMapping</TokenIdentifier>
			<Abstract type="html">Return a new auto-released dynamic object mapping</Abstract>
			<DeclaredIn>RKDynamicObjectMapping.h</DeclaredIn>			
			
			<Declaration>+ (RKDynamicObjectMapping *)dynamicMapping</Declaration>
			
			
			<Anchor>//api/name/dynamicMapping</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RKDynamicObjectMapping/dynamicMappingUsingBlock:</TokenIdentifier>
			<Abstract type="html">Return a new auto-released dynamic object mapping after yielding it to the block for configuration</Abstract>
			<DeclaredIn>RKDynamicObjectMapping.h</DeclaredIn>			
			
			<Declaration>+ (RKDynamicObjectMapping *)dynamicMappingUsingBlock:(void ( ^ ) ( RKDynamicObjectMapping *dynamicMapping ))block</Declaration>
			
			
			<Anchor>//api/name/dynamicMappingUsingBlock:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RKDynamicObjectMapping/dynamicMappingWithBlock:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RKDynamicObjectMapping.h</DeclaredIn>			
			
			<Declaration>+ (RKDynamicObjectMapping *)dynamicMappingWithBlock:(void ( ^ ) ( RKDynamicObjectMapping *dynamicMapping ))block</Declaration>
			
			
			<Anchor>//api/name/dynamicMappingWithBlock:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKDynamicObjectMapping/setObjectMapping:whenValueOfKeyPath:isEqualTo:</TokenIdentifier>
			<Abstract type="html">Defines a dynamic mapping rule stating that when the value of the key property matches the specified
value, the objectMapping should be used.</Abstract>
			<DeclaredIn>RKDynamicObjectMapping.h</DeclaredIn>			
			
			<Declaration>- (void)setObjectMapping:(RKObjectMapping *)objectMapping whenValueOfKeyPath:(NSString *)keyPath isEqualTo:(id)value</Declaration>
			
			
			<Anchor>//api/name/setObjectMapping:whenValueOfKeyPath:isEqualTo:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKDynamicObjectMapping/objectMappingForDictionary:</TokenIdentifier>
			<Abstract type="html">Invoked by the RKObjectMapper and RKObjectMappingOperation to determine the appropriate RKObjectMapping to use
when mapping the specified dictionary of mappable data.</Abstract>
			<DeclaredIn>RKDynamicObjectMapping.h</DeclaredIn>			
			
			<Declaration>- (RKObjectMapping *)objectMappingForDictionary:(NSDictionary *)dictionary</Declaration>
			
			
			<Anchor>//api/name/objectMappingForDictionary:</Anchor>
		</Token>
		
	</File>
</Tokens>