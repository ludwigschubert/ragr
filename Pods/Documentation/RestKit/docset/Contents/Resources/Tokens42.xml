<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RKParserRegistry.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RKParserRegistry</TokenIdentifier>
			<Abstract type="html">RKParserRegistry provides for the registration of RKParser classes
that handle parsing/serializing for content by MIME Type. Registration
is configured via exact string matches (i.e. application/json) or via regular
expression.</Abstract>
			<DeclaredIn>RKParserRegistry.h</DeclaredIn>
			
			<NodeRef refid="42"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RKParserRegistry/sharedRegistry</TokenIdentifier>
			<Abstract type="html">Return the global shared singleton registry for MIME Type to Parsers</Abstract>
			<DeclaredIn>RKParserRegistry.h</DeclaredIn>			
			
			<Declaration>+ (RKParserRegistry *)sharedRegistry</Declaration>
			
			<ReturnValue><Abstract type="html">The global shared RKParserRegistry instance.</Abstract></ReturnValue>
			<Anchor>//api/name/sharedRegistry</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RKParserRegistry/setSharedRegistry:</TokenIdentifier>
			<Abstract type="html">Sets the global shared registry singleton to a new instance of RKParserRegistry</Abstract>
			<DeclaredIn>RKParserRegistry.h</DeclaredIn>			
			
			<Declaration>+ (void)setSharedRegistry:(RKParserRegistry *)registry</Declaration>
			<Parameters>
				<Parameter>
					<Name>registry</Name>
					<Abstract type="html">A new parser registry object to configure as the shared instance.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setSharedRegistry:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKParserRegistry/parserForMIMEType:</TokenIdentifier>
			<Abstract type="html">Returns an instance of the RKParser conformant class registered to handle content
with the given MIME Type.</Abstract>
			<DeclaredIn>RKParserRegistry.h</DeclaredIn>			
			
			<Declaration>- (id&lt;RKParser&gt;)parserForMIMEType:(NSString *)MIMEType</Declaration>
			<Parameters>
				<Parameter>
					<Name>MIMEType</Name>
					<Abstract type="html">The MIME Type of the content to be parsed/serialized.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of the RKParser conformant class registered to handle the given MIME Type.</Abstract></ReturnValue>
			<Anchor>//api/name/parserForMIMEType:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKParserRegistry/parserClassForMIMEType:</TokenIdentifier>
			<Abstract type="html">Returns an instance of the RKParser conformant class registered to handle content
with the given MIME Type.</Abstract>
			<DeclaredIn>RKParserRegistry.h</DeclaredIn>			
			
			<Declaration>- (Class&lt;RKParser&gt;)parserClassForMIMEType:(NSString *)MIMEType</Declaration>
			<Parameters>
				<Parameter>
					<Name>MIMEType</Name>
					<Abstract type="html">The MIME Type of the content to be parsed/serialized.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The RKParser conformant class registered to handle the given MIME Type.</Abstract></ReturnValue>
			<Anchor>//api/name/parserClassForMIMEType:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKParserRegistry/setParserClass:forMIMEType:</TokenIdentifier>
			<Abstract type="html">Registers an RKParser conformant class as the handler for MIME Types exactly matching the
specified MIME Type string.</Abstract>
			<DeclaredIn>RKParserRegistry.h</DeclaredIn>			
			
			<Declaration>- (void)setParserClass:(Class&lt;RKParser&gt;)parserClass forMIMEType:(NSString *)MIMEType</Declaration>
			<Parameters>
				<Parameter>
					<Name>parserClass</Name>
					<Abstract type="html">The RKParser conformant class to instantiate when parsing/serializing MIME Types matching MIMETypeExpression.</Abstract>
				</Parameter><Parameter>
					<Name>MIMEType</Name>
					<Abstract type="html">A MIME Type string for which instances of parserClass should be used for parsing/serialization.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setParserClass:forMIMEType:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKParserRegistry/setParserClass:forMIMETypeRegularExpression:</TokenIdentifier>
			<Abstract type="html">Registers an RKParser conformant class as the handler for MIME Types matching the
specified regular expression.</Abstract>
			<DeclaredIn>RKParserRegistry.h</DeclaredIn>			
			
			<Declaration>- (void)setParserClass:(Class&lt;RKParser&gt;)parserClass forMIMETypeRegularExpression:(NSRegularExpression *)MIMETypeRegex</Declaration>
			<Parameters>
				<Parameter>
					<Name>parserClass</Name>
					<Abstract type="html">The RKParser conformant class to instantiate when parsing/serializing MIME Types matching MIMETypeExpression.</Abstract>
				</Parameter><Parameter>
					<Name>MIMETypeRegex</Name>
					<Abstract type="html">A regular expression that matches MIME Types that should be handled by instances of parserClass.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setParserClass:forMIMETypeRegularExpression:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKParserRegistry/autoconfigure</TokenIdentifier>
			<Abstract type="html">Automatically configure the registry via run-time reflection of the RKParser classes
available that ship with RestKit. This happens automatically when the shared registry
singleton is initialized and makes configuration transparent to users.</Abstract>
			<DeclaredIn>RKParserRegistry.h</DeclaredIn>			
			
			<Declaration>- (void)autoconfigure</Declaration>
			
			
			<Anchor>//api/name/autoconfigure</Anchor>
		</Token>
		
	</File>
</Tokens>