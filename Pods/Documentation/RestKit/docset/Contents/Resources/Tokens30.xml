<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RKObjectMappingOperation.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RKObjectMappingOperation</TokenIdentifier>
			<Abstract type="html">Instances of RKObjectMappingOperation perform transformation between object
representations according to the rules express in RKObjectMapping objects. Mapping
operations provide the foundation for the RestKit object mapping engine and
perform the work of inspecting the attributes and relationships of a source object
and determining how to map them into new representations on a destination object.</Abstract>
			<DeclaredIn>RKObjectMappingOperation.h</DeclaredIn>
			
			<NodeRef refid="30"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKObjectMappingOperation/setSourceObject:</TokenIdentifier>
			<Abstract type="html">A dictionary of mappable elements containing simple values or nested object structures.</Abstract>
			<DeclaredIn>RKObjectMappingOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) id sourceObject</Declaration>
			
			
			<Anchor>//api/name/sourceObject</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKObjectMappingOperation/sourceObject</TokenIdentifier>
			<Abstract type="html">A dictionary of mappable elements containing simple values or nested object structures.</Abstract>
			<DeclaredIn>RKObjectMappingOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) id sourceObject</Declaration>
			
			
			<Anchor>//api/name/sourceObject</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKObjectMappingOperation/setDestinationObject:</TokenIdentifier>
			<Abstract type="html">The target object for this operation. Mappable values in elements will be applied to object
using key-value coding.</Abstract>
			<DeclaredIn>RKObjectMappingOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) id destinationObject</Declaration>
			
			
			<Anchor>//api/name/destinationObject</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKObjectMappingOperation/destinationObject</TokenIdentifier>
			<Abstract type="html">The target object for this operation. Mappable values in elements will be applied to object
using key-value coding.</Abstract>
			<DeclaredIn>RKObjectMappingOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) id destinationObject</Declaration>
			
			
			<Anchor>//api/name/destinationObject</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKObjectMappingOperation/setObjectMapping:</TokenIdentifier>
			<Abstract type="html">The object mapping defining how values contained in the source object should be transformed to the destination object via key-value coding</Abstract>
			<DeclaredIn>RKObjectMappingOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) RKObjectMapping *objectMapping</Declaration>
			
			
			<Anchor>//api/name/objectMapping</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKObjectMappingOperation/objectMapping</TokenIdentifier>
			<Abstract type="html">The object mapping defining how values contained in the source object should be transformed to the destination object via key-value coding</Abstract>
			<DeclaredIn>RKObjectMappingOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) RKObjectMapping *objectMapping</Declaration>
			
			
			<Anchor>//api/name/objectMapping</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKObjectMappingOperation/setDelegate:</TokenIdentifier>
			<Abstract type="html">The delegate to inform of interesting events during the mapping operation</Abstract>
			<DeclaredIn>RKObjectMappingOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) id&lt;RKObjectMappingOperationDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKObjectMappingOperation/delegate</TokenIdentifier>
			<Abstract type="html">The delegate to inform of interesting events during the mapping operation</Abstract>
			<DeclaredIn>RKObjectMappingOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) id&lt;RKObjectMappingOperationDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKObjectMappingOperation/setQueue:</TokenIdentifier>
			<Abstract type="html">An operation queue for deferring portions of the mapping process until later</Abstract>
			<DeclaredIn>RKObjectMappingOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) RKMappingOperationQueue *queue</Declaration>
			
			
			<Anchor>//api/name/queue</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKObjectMappingOperation/queue</TokenIdentifier>
			<Abstract type="html">An operation queue for deferring portions of the mapping process until later</Abstract>
			<DeclaredIn>RKObjectMappingOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) RKMappingOperationQueue *queue</Declaration>
			
			
			<Anchor>//api/name/queue</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RKObjectMappingOperation/mappingOperationFromObject:toObject:withMapping:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new mapping operation configured to transform the object representation
in a source object to a new destination object according to an object mapping definition.</Abstract>
			<DeclaredIn>RKObjectMappingOperation.h</DeclaredIn>			
			
			<Declaration>+ (id)mappingOperationFromObject:(id)sourceObject toObject:(id)destinationObject withMapping:(RKObjectMappingDefinition *)mapping</Declaration>
			<Parameters>
				<Parameter>
					<Name>sourceObject</Name>
					<Abstract type="html">The source object to be mapped. Cannot be nil.</Abstract>
				</Parameter><Parameter>
					<Name>destinationObject</Name>
					<Abstract type="html">The destination object the results are to be mapped onto. May be nil,
in which case a new object will be constructed during the mapping.</Abstract>
				</Parameter><Parameter>
					<Name>mapping</Name>
					<Abstract type="html">An instance of RKObjectMapping or RKDynamicObjectMapping defining how the
mapping is to be performed.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of RKObjectMappingOperation or RKManagedObjectMappingOperation for performing the mapping.</Abstract></ReturnValue>
			<Anchor>//api/name/mappingOperationFromObject:toObject:withMapping:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKObjectMappingOperation/initWithSourceObject:destinationObject:mapping:</TokenIdentifier>
			<Abstract type="html">Initializes the receiver with a source and destination objects and an object mapping
definition for performing a mapping.</Abstract>
			<DeclaredIn>RKObjectMappingOperation.h</DeclaredIn>			
			
			<Declaration>- (id)initWithSourceObject:(id)sourceObject destinationObject:(id)destinationObject mapping:(RKObjectMappingDefinition *)mapping</Declaration>
			<Parameters>
				<Parameter>
					<Name>sourceObject</Name>
					<Abstract type="html">The source object to be mapped. Cannot be nil.</Abstract>
				</Parameter><Parameter>
					<Name>destinationObject</Name>
					<Abstract type="html">The destination object the results are to be mapped onto. May be nil,
in which case a new object will be constructed during the mapping.</Abstract>
				</Parameter><Parameter>
					<Name>mapping</Name>
					<Abstract type="html">An instance of RKObjectMapping or RKDynamicObjectMapping defining how the
mapping is to be performed.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The receiver, initialized with a source object, a destination object, and a mapping.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithSourceObject:destinationObject:mapping:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKObjectMappingOperation/performMapping:</TokenIdentifier>
			<Abstract type="html">Process all mappable values from the mappable dictionary and assign them to the target object
according to the rules expressed in the object mapping definition</Abstract>
			<DeclaredIn>RKObjectMappingOperation.h</DeclaredIn>			
			
			<Declaration>- (BOOL)performMapping:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>error</Name>
					<Abstract type="html">A pointer to an NSError reference to capture any error that occurs during the mapping. May be nil.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A Boolean value indicating if the mapping operation was successful.</Abstract></ReturnValue>
			<Anchor>//api/name/performMapping:</Anchor>
		</Token>
		
	</File>
</Tokens>